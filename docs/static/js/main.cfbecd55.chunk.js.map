{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","items","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","index","ReactDOM","render","document","getElementById"],"mappings":"2LAiCeA,EA9BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAgBrC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,QAAU,IAC5BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACI,uBAAOO,KAAK,OACLC,MAAOT,EACPU,SAhBW,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCKhBG,EAXK,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAE7B,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,EAAOE,UAAU,sCACrC,4BAAIF,Q,uBCPHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEmCO,UAAUF,GAF7C,+DAGIG,MAAMR,GAHV,cAGbS,EAHa,gBAIEA,EAASC,OAJX,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAYZY,GAZY,4CAAH,sDC0BLK,EAtBC,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAuBtC,OAdAC,qBAAU,WAENjB,EAAQC,GACHiB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLT,KAAMY,EACNL,SAAS,MAEd,UAGZ,CAACb,IAEGc,EDjByBM,CAAapB,GAAhCU,EALe,EAKrBJ,KAAcO,EALO,EAKPA,QAErB,OACI,qCACI,6BAAKb,IACJa,GAAW,mBAAGjB,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEQc,EAAOF,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIhB,aEc/B4B,EA5BM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,YAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAWvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ4C,EAAWd,KAAI,SAACR,EAAUuB,GAAX,OACX,cAAC,EAAD,CAAwBvB,SAAUA,GAApBA,YClBtCwB,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cfbecd55.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length >= 2) {\r\n            setCategories(items => [inputValue, ...items]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\"\r\n                   value={inputValue}\r\n                   onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} className=\"animate__animated animate__fadeIn\"/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=pKiWaID9LppjSiq9JhthVXWQPhJlUmFo`;\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    });\r\n    return gifs;\r\n\r\n}\r\n","import React from 'react';\r\nimport GifGridItem from \"./GifGridItem\";\r\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    /**\r\n     * Custom Hook\r\n     */\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem key={img.id} {...img} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifGrid;\r\n","import {useState, useEffect} from 'react';\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    /**\r\n     * Para que solo se ejecute cada vez que cambie la categoría\r\n     */\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                }, 2000);\r\n            });\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Digimon']);\r\n\r\n    //Cuando estaba asociado a un botón\r\n    //const handleAdd = () => {\r\n    //    setCategories([...categories, 'One Punch Man']);\r\n    //    // Otra forma\r\n    //    // setCategories(items => [...items, 'One Punch Man']);\r\n    //};\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category, index) => (\r\n                        <GifGrid key={category} category={category} />)\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}